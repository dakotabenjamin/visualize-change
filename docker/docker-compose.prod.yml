version: "3"

services:
  tile-processor:
    build:
      context: ../.
      dockerfile: docker/tile-processor/Dockerfile.prod
    image: hot-mapping-vis-tile-processor
    environment:
      - GENERATE_UNDERZOOM=0 # set to 1 to generate underzooms, this requires A LOT of CPU/RAM
    volumes:
      - ./data/tiles:/data/tiles # volume shared with api

  server:
    build:
      context: ../.
      dockerfile: docker/server/Dockerfile
    image: hot-mapping-vis-server
    restart: on-failure
    ports:
      - "8080:80" # TODO: change to "80:80" for "real" production use
    volumes:
      - ./data/capture:/data/capture # volume shared with nginx
    depends_on:
      - api
      - frontend

  frontend:
    build:
      context: ../.
      dockerfile: docker/frontend/Dockerfile.prod
    image: hot-mapping-vis-frontend-prod
    restart: on-failure
    ports:
      - "3000:3000"

  renderer:
    build:
      context: ../.
      dockerfile: docker/renderer/Dockerfile.prod
    image: hot-mapping-vis-renderer-prod
    restart: on-failure
    environment:
      - RENDER_QUEUE=render_queue
    depends_on:
      - rabbitmq
    volumes:
      - ./data/capture:/data/capture # volume shared with nginx

  api:
    build:
      context: ../.
      dockerfile: docker/api/Dockerfile.prod
    image: hot-mapping-vis-api-prod
    restart: on-failure
    environment:
      - RENDER_QUEUE=render_queue
    volumes:
      - ./data/tiles:/data/tiles # volume shared with api
    depends_on:
      - db
      - rabbitmq
    ports:
      - "4000:4000"

  db:
    image: mongo
    volumes:
      - ./data/db:/data/db
    healthcheck:
      test: [ "CMD", "nc", "-zv", "localhost", "27017" ]
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "27017:27017"

  rabbitmq:
    image: rabbitmq:3
    healthcheck:
      test: [ "CMD", "nc", "-zv", "localhost", "15672" ]
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "15672:15672"
      - "5672:5672"

